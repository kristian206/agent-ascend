{
  "name": "agency-max-plus",
  "version": "1.5.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "dev:debug": "NODE_OPTIONS='--inspect' next dev --turbopack",
    "dev:network": "next dev --turbopack --hostname 0.0.0.0",
    "build": "next build",
    "build:analyze": "ANALYZE=true next build",
    "build:profile": "next build --profile",
    "start": "next start",
    "start:production": "NODE_ENV=production next start",
    "lint": "eslint",
    "lint:fix": "eslint --fix",
    "lint:staged": "lint-staged",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md,css}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,md,css}\"",
    "type-check": "tsc --noEmit",
    "validate": "npm run format:check && npm run lint && npm run type-check",
    "clean": "rm -rf .next && rm -rf out && rm -rf build",
    "clean:all": "npm run clean && rm -rf node_modules && npm install",
    "test": "echo \"No tests specified yet\" && exit 0",
    "test:watch": "echo \"Test watch mode not configured yet\" && exit 0",
    "test:coverage": "echo \"Test coverage not configured yet\" && exit 0",
    "branch:create": "git checkout -b",
    "branch:switch": "git checkout",
    "branch:list": "git branch",
    "branch:delete": "git branch -d",
    "branch:remote": "git branch -r",
    "commit": "git add . && git commit -m",
    "commit:amend": "git add . && git commit --amend --no-edit",
    "push": "git push origin HEAD",
    "push:force": "git push --force-with-lease origin HEAD",
    "pull": "git pull origin",
    "pull:rebase": "git pull --rebase origin",
    "status": "git status",
    "status:short": "git status --short",
    "log": "git log --oneline -10",
    "log:graph": "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -10",
    "diff": "git diff",
    "diff:staged": "git diff --staged",
    "stash": "git stash",
    "stash:pop": "git stash pop",
    "db:seed": "node scripts/seedBotUsers.mjs",
    "db:reset": "node scripts/resetDatabase.mjs",
    "db:backup": "echo \"Database backup script not implemented yet\"",
    "db:restore": "echo \"Database restore script not implemented yet\"",
    "seed:bots": "node scripts/seedBotUsers.mjs",
    "seed:demo": "node scripts/seedDemoData.mjs",
    "reset:db": "node scripts/resetDatabase.mjs",
    "admin:setup": "node scripts/resetDatabase.mjs",
    "admin:create": "node scripts/createAdmin.mjs",
    "optimize:images": "node scripts/optimizeAllImages.mjs",
    "optimize:logo": "node scripts/optimizeImages.mjs",
    "optimize:bundle": "npm run build:analyze && npx @next/bundle-analyzer .next/static/chunks/",
    "firebase:login": "firebase login",
    "firebase:deploy": "firebase deploy",
    "firebase:deploy:functions": "firebase deploy --only functions",
    "firebase:deploy:rules": "firebase deploy --only firestore:rules",
    "firebase:deploy:indexes": "firebase deploy --only firestore:indexes",
    "firebase:deploy:hosting": "firebase deploy --only hosting",
    "firebase:serve": "firebase emulators:start",
    "firebase:serve:functions": "firebase emulators:start --only functions",
    "firebase:serve:firestore": "firebase emulators:start --only firestore",
    "firebase:logs": "firebase functions:log",
    "dev:emulators": "concurrently \"npm run firebase:serve\" \"npm run dev\"",
    "docs:serve": "npx serve docs/ -p 3001",
    "docs:build": "echo \"Documentation build not configured yet\"",
    "security:audit": "npm audit",
    "security:audit:fix": "npm audit fix",
    "security:check": "npm run security:audit && npm run lint:security",
    "lint:security": "eslint --ext .js,.jsx,.ts,.tsx --config .eslintrc.security.js .",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:update:major": "npx npm-check-updates -u",
    "health:check": "node scripts/healthCheck.mjs",
    "perf:lighthouse": "npx lighthouse http://localhost:3000 --output html --output-path ./lighthouse-report.html",
    "perf:profile": "npm run build:profile && npm run start",
    "backup:create": "node scripts/createBackup.mjs",
    "backup:restore": "node scripts/restoreBackup.mjs",
    "setup:dev": "cp .env.example .env.local && npm install && echo \"Please configure .env.local with your Firebase credentials\"",
    "setup:prod": "npm ci && npm run build",
    "deploy:staging": "vercel --target staging",
    "deploy:production": "vercel --prod",
    "release:patch": "npm version patch && git push --tags",
    "release:minor": "npm version minor && git push --tags",
    "release:major": "npm version major && git push --tags",
    "postinstall": "node scripts/postInstall.mjs || echo \"Post-install script not found, continuing...\"",
    "precommit": "npm run validate",
    "prepush": "npm run validate && npm run test"
  },
  "dependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "autoprefixer": "^10.4.21",
    "dotenv": "^17.2.1",
    "firebase": "^12.2.1",
    "firebase-admin": "^11.11.1",
    "lucide-react": "^0.542.0",
    "next": "15.5.2",
    "postcss": "^8.5.6",
    "react": "19.1.1",
    "react-dom": "19.1.1",
    "tailwindcss": "^3.4.17"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.5.2",
    "sharp": "^0.34.3",
    "typescript": "^5"
  }
}
